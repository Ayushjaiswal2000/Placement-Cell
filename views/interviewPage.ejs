<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interview Details</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.0.0/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
       .notification {
          position: fixed;
          top: 5rem;
          right: 1rem;
          z-index: 1000;
          transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
          transform: translateX(100%);
          opacity: 0;
        }
        .notification.show {
          transform: translateX(0);
          opacity: 1;
        }

        .overflow-auto::-webkit-scrollbar {
            width: 8px; /* Width of the scrollbar */
        }

        .overflow-auto::-webkit-scrollbar-thumb {
            background-color: #4f9deb; /* Light blue color */
            border-radius: 10px;
        }

        .overflow-auto::-webkit-scrollbar-track {
            background: #2d2d2d; /* Track color */
            border-radius: 10px;
        }
    </style>
</head>
<body class="bg-gray-900 text-gray-100">
    <header class="bg-gray-800 p-4">
        <nav class="container mx-auto flex justify-between items-center">
            <a href="/dashboard" class="text-2xl font-bold text-white flex items-center">
                <i class="fas fa-arrow-left mr-2 mt-1"></i> <!-- Font Awesome left arrow icon -->
                <span>Placement Cell</span>
              </a>
            <div class="flex flex-col items-center flex-1">
              <span class="text-lg text-white">Welcome, <%= userName %>!</span>
            </div>
            <div class="flex space-x-6">
                <a href="/login" class="text-white hover:text-gray-400">Logout</a>
            </div>
        </nav>
    </header>
    <main class="container mx-auto p-6">
        <h2 class="text-2xl font-bold text-white text-center">Interview Details</h2>
        <div class="bg-gray-800 p-6 rounded-lg shadow-lg mt-6">
            <h3 class="text-xl font-semibold text-white">Company: <%= interview.company %></h3>
            <p class="text-gray-300 mt-2">Date: <%= interview.date %></p>
        </div>

        <div class="flex flex-wrap gap-6">
            <!-- Students Div -->
            <div class="flex-1 bg-gray-800 p-6 rounded-lg shadow-lg overflow-auto mt-6" style="height: 600px;">
                <h2 class="text-2xl font-bold text-white">Student List</h2>
                <form id="student-form" class="bg-gray-800 p-6 rounded-lg shadow-md">
                    <input type="hidden" id="interviewId" name="interviewId" value="<%= interview._id %>">
                    <h4 class="text-lg font-semibold text-gray-100 ">Select Students</h6>
                    <hr>
                    <% availableStudents.forEach(student => { %>
                      <div class="flex items-center mt-4 p-2 bg-gray-700 rounded-lg hover:bg-gray-600 transition">
                        <input type="checkbox" id="<%= student._id %>" name="students" value="<%= student._id %>" class="mr-3 form-checkbox h-5 w-5 text-blue-600 border-gray-300 rounded focus:ring-0">
                        <label for="<%= student._id %>" class="text-gray-300 text-lg"><%= student.name %></label>
                      </div>
                    <% }); %>
                    <button type="button" onclick="addStudents()" class="w-full bg-blue-500 text-white font-semibold px-4 py-2 mt-6 rounded-lg hover:bg-blue-700 transition">
                      Add Student
                    </button>
                </form>
            </div>

            <!-- Interviews Div -->
            <div class="flex-1 bg-gray-800 p-6 rounded-lg shadow-lg overflow-auto mt-6" style="height: 600px;">
                <h2 class="text-2xl font-bold text-white">Interviews Allocation</h2>
                

                <% if (interview) { %>
                    <div class="mt-6">
                        <h4 class="text-lg font-bold text-white">Students</h4>
                        <hr>
                        <% if (interview.students && interview.students.length > 0) { %>
                            <% interview.students.forEach(student => { %>
                                <div class="mt-4 bg-gray-700 p-4 rounded-lg">
                                    <p class="text-gray-300">Name: <%= student.name %></p>

                                    <form action="/update-student-status" method="post">
                                        <input type="hidden" name="studentId" value="<%= student._id %>">
                                        <input type="hidden" name="interviewId" value="<%= interview._id %>">

                                        <label class="text-gray-300">
                                            <input type="radio" name="status" value="Registered" <% if (student.status === 'Registered') { %>checked<% } %>> Registered
                                        </label>
                                        <label class="text-gray-300 ml-4">
                                            <input type="radio" name="status" value="Pass" <% if (student.status === 'Pass') { %>checked<% } %>> Pass
                                        </label>
                                        <label class="text-gray-300 ml-4">
                                            <input type="radio" name="status" value="Fail" <% if (student.status === 'Fail') { %>checked<% } %>> Fail
                                        </label>
                                        <label class="text-gray-300 ml-4">
                                            <input type="radio" name="status" value="Didn't Attempt" <% if (student.status === "Didn't Attempt") { %>checked<% } %>> Didn't Attempt
                                        </label>

                                        <button type="submit" class="ml-4 bg-blue-500 text-white p-2 rounded">Update</button>
                                    </form>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-gray-300">No students assigned to this interview.</p>
                        <% } %>
                    </div>
                <% } else { %>
                    <p class="text-gray-300">Interview details not found.</p>
                <% } %>
            </div>
        </div>
    </main>

    <div id="studentAddedNotification" class="notification bg-green-600 text-white p-4 rounded-lg shadow-lg">
        <p>Student Allocated Successfully!</p>
    </div>
    <div id="studentUpdatedNotification" class="notification bg-green-600 text-white p-4 rounded-lg shadow-lg">
        <p>Student Status Updated Successfully!</p>
    </div>
    
    <footer class="bg-gray-800 py-4">
        <div class="container mx-auto text-center text-gray-400">
          <p>&copy; 2024 Placement Cell. All rights reserved.</p>
        </div>
      </footer>

    <script>
        function getQueryParameter(name) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(name);
        }

        document.addEventListener("DOMContentLoaded", function() {
            const interviewId = getQueryParameter('id');
            if (interviewId) {
                document.getElementById('interviewId').value = interviewId;
            }

            handleNotifications();
        });

        async function addStudents() {
            const interviewId = document.getElementById('interviewId').value;
            if (!interviewId) {
                alert('Interview ID is missing.');
                return;
            }

            const studentCheckboxes = document.querySelectorAll('input[name="students"]:checked');
            const studentIds = Array.from(studentCheckboxes).map(cb => cb.value);

            if (studentIds.length === 0) {
                alert('No students selected.');
                return;
            }

            try {
                const response = await fetch('/interviews/add-students', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ interviewId, studentIds })
                });

                if (response.ok) {
                    const result = await response.json();
           
                window.location.href = result.redirectUrl;
                } else {
                    alert('Error: ' + response.statusText);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to add students.');
            }
        }

        function handleNotifications() {
            const urlParams = new URLSearchParams(window.location.search);
            const successMessage = urlParams.get('success');

            if (successMessage === 'studentUpdated') {
                showNotification('studentUpdatedNotification');
            } else if (successMessage === 'studentAdded') {
                showNotification('studentAddedNotification');
            }
        }

        function showNotification(notificationId) {
            const notification = document.getElementById(notificationId);
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>
