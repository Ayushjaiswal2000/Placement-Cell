<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interview Details</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.0.0/dist/tailwind.min.css" rel="stylesheet">
    <style>
       .notification {
          position: fixed;
          top: 5rem;
          right: 1rem;
          z-index: 1000;
          transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
          transform: translateX(100%);
          opacity: 0;
        }
        .notification.show {
          transform: translateX(0);
          opacity: 1;
        }
    </style>
</head>
<body class="bg-gray-900 text-gray-100">
    <header class="bg-gray-800 p-4">
        <nav class="container mx-auto flex justify-between items-center">
            <a href="/" class="text-2xl font-bold text-white">Placement Cell</a>
            <div class="flex flex-col items-center flex-1">
              <span class="text-lg text-white">Welcome, <%= userName %>!</span>
            </div>
            <div class="flex space-x-6">
                <a href="/signup" class="text-white hover:text-gray-400">Download Report</a>
            </div>
        </nav>
    </header>
  <main class="container mx-auto p-6">
    <h2 class="text-2xl font-bold text-white text-center">Interview Details</h2>
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg mt-6">
      <h3 class="text-xl font-semibold text-white">Company: <%= interview.company %></h3>
      <p class="text-gray-300 mt-2">Date: <%= interview.date %></p>
    </div>


    <div class="flex flex-wrap gap-6">
      <!-- Students Div -->
      <div class="flex-1 bg-gray-800 p-6 rounded-lg shadow-lg overflow-auto mt-6" style="height: 600px;">
          <h2 class="text-2xl font-bold text-white">Student List</h2>
          <form id="student-form" class="bg-gray-800 p-6 rounded-lg shadow-md">
              <input type="hidden" id="interviewId" name="interviewId">
              <h2 class="text-2xl font-semibold text-gray-100 mb-4">Select Students</h2>
              <% students.forEach(student => { %>
                <div class="flex items-center mt-4 p-2 bg-gray-700 rounded-lg hover:bg-gray-600 transition">
                  <input type="checkbox" id="<%= student._id %>" name="students" value="<%= student._id %>" class="mr-3 form-checkbox h-5 w-5 text-blue-600 border-gray-300 rounded focus:ring-0">
                  <label for="<%= student._id %>" class="text-gray-300 text-lg"><%= student.name %></label>
                </div>
              <% }); %>
              <button type="button" onclick="addStudents()" class="w-full bg-blue-500 text-white font-semibold px-4 py-2 mt-6 rounded-lg hover:bg-blue-700 transition">
                Add Student
              </button>
            </form>
            
        </div>
        
        
        
        
        
        <!-- Interviews Div -->
        <div class="flex-1 bg-gray-800 p-6 rounded-lg shadow-lg overflow-auto mt-6" style="height: 600px;">
          <h2 class="text-2xl font-bold text-white">Interviews Allocation </h2>

          <p class="text-gray-300 mt-2">Details of the interview allocation will go here.</p>
       
        </div>
        
      </div>
   
  </main>


  <div id="studentAddedNotification" class="notification bg-green-600 text-white p-4 rounded-lg shadow-lg">
    <p>Student Allocated Successfully!</p>
  </div>

  <script>
    function getQueryParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }

    document.addEventListener("DOMContentLoaded", function() {
        const interviewId = getQueryParameter('id');
        if (interviewId) {
            document.getElementById('interviewId').value = interviewId;
        }

        handleNotifications();
    });

    async function addStudents() {
        const interviewId = document.getElementById('interviewId').value;
        if (!interviewId) {
            alert('Interview ID is missing.');
            return;
        }

        const studentCheckboxes = document.querySelectorAll('input[name="students"]:checked');
        const studentIds = Array.from(studentCheckboxes).map(cb => cb.value);

        if (studentIds.length === 0) {
            alert('No students selected.');
            return;
        }

        try {
            const response = await fetch('/interviews/add-students', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ interviewId, studentIds })
            });

            if (response.ok) {
                window.location.href = `/interview?id=${interviewId}&success=studentAddedToInterview`;
            } else {
                console.error('Failed to add students');
            }
        } catch (error) {
            console.error(error);
            alert('An error occurred while adding students');
        }
    }

    function showNotification(notificationId) {
        const notification = document.getElementById(notificationId);
        if (notification) {
            console.log('Showing notification');
            notification.classList.add('show');
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000); // Hide notification after 3 seconds
        } else {
            console.error('Notification element not found');
        }
    }

    function handleNotifications() {
        const urlParams = new URLSearchParams(window.location.search);
        const successType = urlParams.get('success');

        if (successType === 'studentAddedToInterview') {
            showNotification('studentAddedNotification');
        }

        if (successType) {
            urlParams.delete('success');
            window.history.replaceState({}, document.title, `${window.location.pathname}?${urlParams.toString()}`);
        }
    }
</script>

</body>
</html>
